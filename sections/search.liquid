{% comment %} COMPONENT STYLES {% endcomment %}
{{ 'component-product-price.css' | asset_url | stylesheet_tag }}
{{ 'component-product-card.css' | asset_url | stylesheet_tag }}
{{ 'component-pagination.css' | asset_url | stylesheet_tag }}
{{ 'section-collection.css' | asset_url | stylesheet_tag }}
{{ 'section-search.css' | asset_url | stylesheet_tag }}

{% comment %} DYNAMIC STYLES {% endcomment %}
{%- style -%}
  .collection-filters-wrapper {
    display: flex;
    {%- if section.settings.enable_filtering and section.settings.filter_type == "vertical" -%}
      flex-direction: row;
    {%- elsif section.settings.enable_filtering and section.settings.filter_type == "horizontal" -%}
      flex-direction: column;
    {% else %}
      flex-direction: column;
    {%- endif -%}
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    gap: 10px;
  }

  #product-grid-{{ section.id }} {
    position: relative;
  }

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 769px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  @media screen and (max-width: 990px) {
    .product-grid {
      grid-template-columns: repeat({{ section.settings.columns_mobile }}, 1fr);
    }
  }

  /* Button styling for product grid */
  .product-grid-{{section.id}} .product-grid .quick-add__submit {
    color: {{ section.settings.button_text_color }};
    background-color: {{ section.settings.button_background_color }};
    border-color: {{ section.settings.button_border_color }};
    transition: all 0.2s ease;
  }
  
  .product-grid-{{section.id}} .quick-add__submit:hover {
    background-color: {{ section.settings.button_background_color | color_modify: 'alpha', 0.8 }};
  }
  
  .product-grid-{{section.id}} .quick-add__submit:after {
    transition: box-shadow 0.2s ease;
  }
{%- endstyle -%}

{%- if section.settings.quick_add == 'standard' -%}
  {{ 'component-quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'component-quick-add.js' | asset_url }}" type="module"></script>
  <script src="{{ 'component-modal-opener.js' | asset_url }}" type="module"></script>
{%- endif -%}

<div class="template-search{% unless search.performed and search.results_count > 0 %} template-search--empty{% endunless %} section-{{ section.id }}-padding">
  <div class="template-search__header color-{{ section.settings.color_scheme }} page-width{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
    <h1 class="h2 center">
      {%- if search.performed -%}
        {{- 'templates.search.title' | t -}}
      {%- else -%}
        {{- 'general.search.search' | t -}}
      {%- endif -%}
    </h1>
    <div
      class="template-search__search"
      x-data="{ searchTerm: '{{ search.terms | escape }}' }"
      @input="searchTerm = $event.target.value"
    >
      {%- if settings.predictive_search_enabled -%}
        {%- render 'component-predictive-search', context: 'search-page' -%}
      {%- endif -%}
    </div>
    {%- if search.performed -%}
      {%- unless section.settings.enable_filtering or section.settings.enable_sorting -%}
        {%- if search.results_count > 0 -%}
          <p role="status">
            {{ 'templates.search.results_with_count_and_term' | t: terms: search.terms, count: search.results_count }}
          </p>
        {%- endif -%}
      {%- endunless -%}
      {%- if search.results_count == 0 and search.filters == empty -%}
        <p role="status">{{ 'templates.search.no_results' | t: terms: search.terms }}</p>
      {%- endif -%}
    {%- endif -%}
  </div>
  {%- if search.performed -%}
    <div class="collection-info-wrapper page-width">
      <collection-info data-section="{{ section.id }}">
        <div class="filter-type-{{ section.settings.filter_type | escape | downcase }}">
          {%- paginate search.results by section.settings.products_per_page -%}
            <div class="main-content">
              <div class="collection-filters-wrapper">
                {%- if section.settings.enable_filtering and section.settings.filter_type == 'vertical' -%}
                  {% render 'component-filters-sidebar',
                    results: search,
                    collapse_filters: section.settings.collapse_filters,
                    show_filter_count: section.settings.show_filter_count
                  %}
                {% endif %}
                <div class="product-grid-container">
                  <div class="sorting-wrapper">
                    {%- if section.settings.enable_filtering and section.settings.filter_type == 'vertical' -%}
                      <div class="mobile-filters-drawer large-up-hide">
                        {%- render 'component-filters-drawer',
                          results: search,
                          enable_sorting: section.settings.enable_sorting,
                          enable_filtering: section.settings.enable_filtering,
                          color_scheme: section.settings.color_scheme,
                          section_id: section.id,
                          show_filter_count: section.settings.show_filter_count
                        -%}
                      </div>
                    {%- endif -%}
                    {%- if section.settings.enable_filtering and section.settings.filter_type == 'horizontal' -%}
                      <div class="horizontal-filters__parent-wrapper">
                        {% render 'component-filters-horizontal',
                          results: search,
                          show_filter_count: section.settings.show_filter_count
                        %}
                        <div class="mobile-horizontal-filter large-up-hide">
                          {%- render 'component-filters-drawer',
                            results: search,
                            enable_sorting: section.settings.enable_sorting,
                            enable_filtering: section.settings.enable_filtering,
                            color_scheme: section.settings.color_scheme,
                            section_id: section.id,
                            show_filter_count: section.settings.show_filter_count
                          -%}
                        </div>
                      </div>
                    {% elsif section.settings.enable_filtering and section.settings.filter_type == 'drawer' %}
                      <div class="horizontal-filters__parent-wrapper">
                        {% render 'component-filters-drawer',
                          results: search,
                          enable_sorting: section.settings.enable_sorting,
                          enable_filtering: section.settings.enable_filtering,
                          color_scheme: section.settings.color_scheme,
                          section_id: section.id,
                          show_filter_count: section.settings.show_filter_count
                        %}
                      </div>
                    {% endif %}
                    <div class="child-sorting-wrapper">
                      {%- if section.settings.enable_sorting -%}
                        {%- assign sort_by = search.sort_by | default: search.default_sort_by -%}
                        <div id="sort-by-{{ section.id }}" class="facet-filters__field small-hide">
                          <h2 class="facet-filters__label">
                            <label for="SortBy">Sort by:</label>
                          </h2>
                          <select
                            data-render-section="filters-form"
                            name="sort_by"
                            {% if section.settings.filter_type == 'drawer' %}
                              form="filters-form-drawer"
                            {% elsif section.settings.filter_type == 'horizontal'
                              or section.settings.filter_type == 'vertical'
                            %}
                              form="filters-form"
                            {% endif %}
                            id="SortBy"
                            class="facet-filters__sort"
                          >
                            {%- for option in search.sort_options -%}
                              <option
                                value="{{ option.value | escape }}"
                                {% if option.value == sort_by %}
                                  selected="selected"
                                {% endif %}
                              >
                                {{ option.name | escape }}
                              </option>
                            {%- endfor -%}
                          </select>
                        </div>
                      {%- endif -%}
                      <div class="item-counts-wrapper">
                        <div id="results-count-{{ section.id }}" class="results-count">
                          {%- if search.results_count -%}
                            {{
                              'templates.search.results_with_count'
                              | t: terms: search.terms, count: search.results_count
                            }}
                          {%- elsif search.products_count == search.all_products_count -%}
                            {{ 'products.facets.product_count_simple' | t: count: search.products_count }}
                          {%- else -%}
                            {{
                              'products.facets.product_count'
                              | t: product_count: search.products_count, count: search.all_products_count
                            }}
                          {%- endif -%}
                        </div>
                        <div id="loading-spinner-{{ section.id }}" class="loading-overlay__spinner"></div>
                      </div>
                    </div>
                  </div>

                  <div id="active-filter-group-{{ section.id }}" class="active-filter-group__item-wrapper">
                    {% liquid
                      assign has_active_filters = false
                      for f in search.filters
                        if f.type == 'price_range'
                          if f.min_value.value > 0 or f.max_value.value < f.range_max
                            assign has_active_filters = true
                          endif
                        else
                          if f.active_values.size > 0
                            assign has_active_filters = true
                          endif
                        endif
                      endfor
                    %}

                    {%- for f in search.filters -%}
                      {% if f.type == 'price_range' and f.min_value.value > 0 or f.max_value.value < f.range_max %}
                        {% assign min = f.min_value.value %}
                        {% assign max = f.max_value.value %}
                        <div class="filter active-filter-item">
                          <span>
                            {{- f.label | escape }}: {{ min | money -}}
                            - {{ max | money -}}
                          </span>
                          <div
                            class="filter-close"
                            data-render-section-url="{{ f.url_to_remove }}"
                          >
                            {{- 'icon-close.svg' | inline_asset_content -}}
                          </div>
                        </div>
                      {% else %}
                        {% for v in f.active_values %}
                          <div class="filter active-filter-item">
                            <span>{{ f.label | escape }}: {{ v.label | escape -}}</span>
                            <div
                              class="filter-close"
                              data-render-section-url="{{ v.url_to_remove }}"
                            >
                              {{- 'icon-close.svg' | inline_asset_content -}}
                            </div>
                          </div>
                        {% endfor %}
                      {% endif %}
                    {%- endfor -%}

                    {% if has_active_filters %}
                      {%- liquid
                        assign terms = search.terms | escape
                        assign results_url = '?q=' | append: terms
                      -%}
                      <div
                        class="filter active-filter-item active-filter-clear-all"
                        data-render-section-url="{{ results_url }}"
                      >
                        <span>Clear all filters</span>
                      </div>
                    {% endif %}
                  </div>

                  <div class="product-grid-wrapper product-grid-{{ section.id }}" id="product-grid-{{ section.id }}">
                    <div id="loading-overlay-{{ section.id }}" class="loading-overlay"></div>
                    <div class="product-grid" {% if section.settings.enable_infinite_scroll %}data-product-grid{% endif %}>
                      {%- for item in search.results -%}
                        {% assign lazy_load = false %}
                        {%- if forloop.index > 2 -%}
                          {%- assign lazy_load = true -%}
                        {%- endif -%}
                        {%- case item.object_type -%}
                          {%- when 'product' -%}
                            {% render 'component-product-card',
                              card_product: item,
                              show_vendor: section.settings.show_vendor,
                              enable_swatches: section.settings.enable_swatches,
                              swatch_trigger: section.settings.swatch_trigger,
                              swatch_type: section.settings.swatch_type,
                              quick_add: section.settings.quick_add,
                              section_id: section.id,
                              button_text_color: section.settings.button_text_color,
                              button_border_color: section.settings.button_border_color
                            %}
                          {%- when 'article' -%}
                            {% render 'component-article-card',
                              article: item,
                              show_image: true,
                              show_date: section.settings.article_show_date,
                              show_author: section.settings.article_show_author,
                              show_badge: true,
                              lazy_load: lazy_load
                            %}
                          {%- when 'page' -%}
                            <div class="article-card-wrapper card-wrapper underline-links-hover">
                              <div
                                class="card card--card card--text ratio"
                                style="--ratio-percent: 104.2%;"
                              >
                                <a href="{{ item.url }}" class="card__content">
                                  <div class="card__information">
                                    <h3 class="card__heading">
                                      <span class="page-card__title">
                                        {{ item.title | truncate: 50 | escape }}
                                      </span>
                                    </h3>
                                  </div>
                                  <div class="card__badge-wrapper">
                                    <div class="card__badge article-card__badge">
                                      <span class="badge">
                                        {{- 'templates.search.page' | t -}}
                                      </span>
                                    </div>
                                  </div>
                                </a>
                              </div>
                            </div>
                        {%- endcase -%}
                      {%- endfor -%}
                    </div>
                    {% if section.settings.enable_infinite_scroll %}
                      <infinite-scroll style="display: flex; justify-content: center;">
                        {%- if paginate.next -%}
                          <a style="color: currentColor; text-decoration: none; pointer-events: none; margin-top: 30px;"
                            href="{{ paginate.next.url }}&section_id={{ section.id }}"></a>
                        {%- endif -%}
                      </infinite-scroll>
                    {% else %}
                      {%- if paginate.pages > 1 -%}
                        {% render 'component-pagination', paginate: paginate, anchor: '' %}
                      {%- endif -%}
                    {% endif %}
                  </div>
                </div>
              </div>
            </div>
          {%- endpaginate -%}
        </div>
      </collection-info>
    </div>
  {%- endif -%}
</div>

<script src="{{ 'section-collection.js' | asset_url }}" type="module"></script>
<script src="{{ 'component-product-card.js' | asset_url }}" type="module"></script>
<script src="{{ 'component-filters-price-range.js' | asset_url }}" type="module"></script>
{% if section.settings.enable_infinite_scroll %}
  <script src="{{ 'component-infinite-scroll.js' | asset_url }}" type="module"></script>
{% endif %}

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "info": "t:sections.main-collection-product-grid.settings.quick_add.info",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_swatches",
      "default": true,
      "label": "Enable swatches",
      "info": "Show variant swatches on product cards"
    },
    {
      "type": "select",
      "id": "swatch_type",
      "label": "Swatch type",
      "options": [
        {
          "value": "color",
          "label": "Color based"
        },
        {
          "value": "image",
          "label": "Image based"
        }
      ],
      "default": "image",
      "info": "Display swatches based on color values or variant images"
    },
    {
      "type": "text",
      "id": "swatch_trigger",
      "label": "Swatch trigger",
      "default": "Color",
      "info": "Enter the product option name to use for variant swatches (e.g. 'Color', 'Size', etc.)"
    },
    {
      "type": "header",
      "content": "Pagination"
    },
    {
      "type": "checkbox",
      "id": "enable_infinite_scroll",
      "default": true,
      "label": "Enable infinite scroll",
      "info": "Enable infinite scroll for the collection page"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.button_styling.content"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "t:sections.main-collection-product-grid.settings.button_text_color.label",
      "default": "#838383"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "t:sections.main-collection-product-grid.settings.button_border_color.label",
      "default": "#838383"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "t:sections.main-collection-product-grid.settings.button_background_color.label",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "collapse_filters",
      "default": true,
      "label": "Collapse filters by default"
    },
    {
      "type": "checkbox",
      "id": "show_filter_count",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.show_filter_count.label",
      "info": "t:sections.main-collection-product-grid.settings.show_filter_count.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-search.settings.header__2.content",
      "info": "t:sections.main-search.settings.header__2.info"
    },
    {
      "type": "checkbox",
      "id": "article_show_date",
      "default": true,
      "label": "t:sections.main-search.settings.article_show_date.label"
    },
    {
      "type": "checkbox",
      "id": "article_show_author",
      "default": false,
      "label": "t:sections.main-search.settings.article_show_author.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
